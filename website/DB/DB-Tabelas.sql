-- MySQL Script generated by MySQL Workbench
-- 11/05/19 09:38:56
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema controle_estoque
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema controle_estoque
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `controle_estoque` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `controle_estoque` ;

-- -----------------------------------------------------
-- Table `controle_estoque`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `controle_estoque`.`usuario` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `nome` VARCHAR(45) NOT NULL COMMENT '',
  `email` VARCHAR(45) NOT NULL COMMENT '',
  `senha` VARCHAR(32) NOT NULL COMMENT '',
  `data_registro` DATE NOT NULL COMMENT '',
  `ativo` TINYINT(1) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `controle_estoque`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `controle_estoque`.`produto` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `nome` VARCHAR(100) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `controle_estoque`.`fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `controle_estoque`.`fornecedor` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `nome` VARCHAR(100) NOT NULL COMMENT '',
  `cnpj` VARCHAR(20) NOT NULL COMMENT '',
  `email` VARCHAR(45) NOT NULL COMMENT '',
  `endereco` VARCHAR(100) NOT NULL COMMENT '',
  `numero` VARCHAR(5) NOT NULL COMMENT '',
  `bairro` VARCHAR(45) NOT NULL COMMENT '',
  `usuario_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_fornecedor_usuario1_idx` (`usuario_id` ASC)  COMMENT '',
  CONSTRAINT `fk_fornecedor_usuario1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `controle_estoque`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `controle_estoque`.`representante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `controle_estoque`.`representante` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `nome` VARCHAR(45) NOT NULL COMMENT '',
  `fornecedor_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_representante_fornecedor_idx` (`fornecedor_id` ASC)  COMMENT '',
  CONSTRAINT `fk_representante_fornecedor`
    FOREIGN KEY (`fornecedor_id`)
    REFERENCES `controle_estoque`.`fornecedor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `controle_estoque`.`itens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `controle_estoque`.`itens` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `qtde_itens` INT NOT NULL COMMENT '',
  `qtde_itens_vend` INT NOT NULL COMMENT '',
  `valor_compra` DECIMAL(7,2) NOT NULL COMMENT '',
  `valor_venda` DECIMAL(7,2) NOT NULL COMMENT '',
  `data_compra` DATE NOT NULL COMMENT '',
  `data_venda` DATE NULL COMMENT '',
  `ativo` TINYINT(1) NOT NULL COMMENT '',
  `fornecedor_id` INT NOT NULL COMMENT '',
  `produto_id` INT NOT NULL COMMENT '',
  `usuario_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_itens_fornecedor1_idx` (`fornecedor_id` ASC)  COMMENT '',
  INDEX `fk_itens_produto1_idx` (`produto_id` ASC)  COMMENT '',
  INDEX `fk_itens_usuario1_idx` (`usuario_id` ASC)  COMMENT '',
  CONSTRAINT `fk_itens_fornecedor1`
    FOREIGN KEY (`fornecedor_id`)
    REFERENCES `controle_estoque`.`fornecedor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_itens_produto1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `controle_estoque`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_itens_usuario1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `controle_estoque`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
